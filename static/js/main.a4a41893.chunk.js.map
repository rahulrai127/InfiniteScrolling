{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["searchquery","Component","React","LOAD_STATE","ReactDOM","render","SUCCESS","ERROR","LOADING","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","starImage1","imageID","undefined","state","starred1","setState","prevState","objectSpread","defineProperty","checkStarred1","starImage","starred","checkStarred","IncreaseCount","_this$state","count","likeState","SearchBtnClick","event","preventDefault","document","getElementById","value","updated","photos","fetchPhotos","console","log","totalPhotos","perPage","currentPage","loadState","page","_this2","self","_this$props","props","appId","baseUrl","options","params","client_id","per_page","query","axios","get","then","response","new_photos","i","push","data","results","parseInt","headers","catch","which","click","_this$state2","react_default","a","createElement","className","type","onKeyPress","Enter","bind","placeholder","id","onClick","src","width","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","App_List","increaseCount","ListItem","LikeBtnClick","_this3","_this$props2","photo","key","urls","small","alt","user","profile_image","href","portfolio_url","target","name","List","_this4","_this$props3","items","map","App_ListItem","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","src_App_0","URL","process","origin","addEventListener","concat","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a4a41893.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nconst { Component } = React;\nconst { render } = ReactDOM;\nconst LOAD_STATE = {\n  SUCCESS: 'SUCCESS',\n  ERROR: 'ERROR',\n  LOADING: 'LOADING'\n};\nvar searchquery;\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      photos: [],\n      totalPhotos: 0,\n      updated:false,\n      perPage: 8,\n      currentPage: 1,\n      loadState: LOAD_STATE.LOADING,\n      count : 0,\n      starred : {},\n      starred1 : {}\n    }\n  }\n\n\n\n\n  starImage1= imageID=>{\n    if(this.state.starred1[imageID] === undefined)\n    {\n      this.setState(prevState =>({\n        starred1 : { ...prevState.starred1,[imageID]:1}\n      }))\n    }\n    else\n    {\n      this.setState(prevState => ({\n        starred1 : { ...prevState.starred1,[imageID]:this.state.starred1[imageID]+1}\n      }))\n    }\n  }\n\n  checkStarred1= imageID => {\n    return this.state.starred1[ imageID ]\n  }\n\n\n\n\n\n\n\n\n  starImage= imageID=>{\n    if(this.state.starred[imageID] === undefined)\n    {\n      this.setState(prevState =>({\n        starred : { ...prevState.starred,[imageID]:true}\n      }))\n    }\n    else\n    {\n      this.setState(prevState => ({\n        starred : { ...prevState.starred,[imageID]:!this.state.starred[imageID]}\n      }))\n    }\n  }\n\n  checkStarred= imageID => {\n    return this.state.starred[ imageID ]\n  }\n\n\n  IncreaseCount= () =>{\n    const{count,likeState} = this.state;\n    this.setState({\n      count:count+1,\n    })  \n  }\n  \n  componentDidMount() {\n  }\n  \n  fetchPhotos(page) {\n    var self = this;\n    const { perPage } = this.state;\n    var { appId, baseUrl } = this.props;\n    const options = {\n      params: {\n        client_id: appId,\n        page: page,\n        per_page: perPage,\n        query:searchquery\n      }\n    };\n\n\n    if(this.state.updated==true)\n    {\n      baseUrl=\"https://api.unsplash.com/search/photos\";\n      axios.get(baseUrl, options)\n      .then((response) => {\n        var new_photos = this.state.photos;\n        for(var i=0;i<8;i++)\n        {\n          new_photos.push(response.data.results[i])\n        }\n        self.setState(prevState =>({\n           photos: new_photos, \n           totalPhotos: parseInt(response.headers['x-total']),\n           currentPage: page,\n           loadState: LOAD_STATE.SUCCESS\n        }));\n      })\n        .catch(() => {\n        this.setState({ loadState: LOAD_STATE.ERROR });\n      });\n      \n    }\n    else\n      {\n        baseUrl='https://api.unsplash.com/photos/curated';\n       axios.get(baseUrl, options)\n      .then((response) => {\n\n        var new_photos = this.state.photos;\n        for(var i=0;i<8;i++)\n        {\n          new_photos.push(response.data[i])\n        }\n\n        self.setState({\n           photos: new_photos, \n           totalPhotos: parseInt(response.headers['x-total']),\n          currentPage: page,\n          loadState: LOAD_STATE.SUCCESS\n        });\n      })\n      \n          .catch(() => {\n        this.setState({ loadState: LOAD_STATE.ERROR });\n      });\n    }\n  }\n  SearchBtnClick = (event) => {\n    event.preventDefault();\n    searchquery =document.getElementById(\"search\").value;\n    if(searchquery)\n           this.state.updated=true\n          else\n            this.state.updated=false\n    var new_photos = [];\n    this.setState({\n      photos: new_photos\n   });\n    this.fetchPhotos(1);\n    console.log('Button was clicked!');\n}\nEnter(event) {\n  var code =  event.which;\n  if(code === 13) { \n    event.preventDefault();\n    document.getElementById(\"search-btn\").click();\n  } \n}\n  render() {\n    const{count, likeState} = this.state;\n    return (\n      <div className=\"app\">\n          <div>\n          <input type=\"text\" onKeyPress={this.Enter.bind(this)} placeholder=\"Search\" id=\"search\"/>\n          <button type='button' id=\"search-btn\" className=\"button\" onClick={this.SearchBtnClick}><img src=\"http://www.clker.com/cliparts/n/U/H/1/H/u/search-icon-white-one-hi.png\" width=\"20px\" /></button> \n        </div>\n        <InfiniteScroll\n                pageStart={0}\n                loadMore={this.fetchPhotos.bind(this)}\n                hasMore={true || false}\n                loader={<div>Loading ...</div>}>\n                \n                <List data={this.state.photos}\n                  count = {this.state.count}\n                  likeState = {this.state.likeState}\n                  increaseCount = {this.IncreaseCount}\n                  starred = {this.starred}\n                  starImage = {this.starImage.bind(this)}\n                  checkStarred = {this.checkStarred.bind(this)}\n                  starred1 = {this.starred1}\n                    starImage1 = {this.starImage1.bind(this)}\n                    checkStarred1 = {this.checkStarred1.bind(this)} />  \n                \n        </InfiniteScroll>        \n      </div>\n    )\n  }\n}\n\n\nclass ListItem extends Component{\n\n\n\n  LikeBtnClick = (id,event) => {\n    event.preventDefault();\n    this.props.starImage(id);\n    this.props.starImage1(id);\n    \n}\n\n\n  render()\n  {\n    const{count,photo,likeState,increaseCount,checkStarred} = this.props;\n    return (\n      <div key={photo.id} className=\"grid__item card\">\n        <div className=\"card__body\">\n          <img src={photo.urls.small} alt=\"\" />\n        </div>\n        <div className=\"card__footer media\">\n          <img src={photo.user.profile_image.small} alt=\"\" className=\"media__obj\" />\n          <div className=\"media__body\">\n            <a href={photo.user.portfolio_url} target=\"_blank\">{ photo.user.name }</a>\n            <span>{this.props.checkStarred(photo.id)?<button className=\"btn2\" onClick={this.LikeBtnClick.bind(this,photo.id)} ><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png\"/></button> : <button className=\"btn1\" onClick={this.LikeBtnClick.bind(this,photo.id)} ><img src=\"https://img.icons8.com/metro/420/like.png\"/></button>}\n            {this.props.checkStarred1(photo.id)}\n          </span>\n          </div>\n          \n          </div>\n      </div>\n    )\n  }\n}\n\nclass List extends Component{\n  render()\n  {\n    const{data, count,increaseCount} = this.props;\n    var items = data.map(photo => <ListItem  likeState = {this.props.likeState} increaseCount={this.props.increaseCount} count = {this.props.count} photo={photo} starred = {this.starred}\n      starImage = {this.props.starImage.bind(this)}\n        starred1 = {this.starred1}\n        starImage1 = {this.props.starImage1.bind(this)}\n        checkStarred1 = {this.props.checkStarred1.bind(this)}\n      checkStarred = {this.props.checkStarred.bind(this)}/>);\n  return (\n    <div className=\"grid\">\n      { items }\n    </div>\n  )\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App\n      appId={\"c28beea69eb8b62f16dcfd5d00a9703e578bb377babf88cc955236818c2ccf73\"}\n    />,\n    document.getElementById('mount-point')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}